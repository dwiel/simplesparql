# This file is written in N3 / Turtle

@prefix rdfs:   <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rdf:    <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xsd:    <http://www.w3.org/2001/XMLSchema#> .

@prefix module: <http://joseki.org/2003/06/module#> .
@prefix joseki: <http://joseki.org/2005/06/configuration#> .
@prefix ja:     <http://jena.hpl.hp.com/2005/11/Assembler#> .

## --------------------------------------------------------------
## This file is written in N3 / Turtle
## It is an RDF graph - order of RDF triples does not matter
## to the machine but it does help people who need to edit this file.

## Note: web.xml must be in-step with this file.
## for each service, 

## Note: adding rdfs:label to blank nodes will cause Joseki 
## to print that in log messages.

## See also file:joseki-config-example.ttl


## --------------------------------------------------------------
## About this configuration

<> rdfs:label "Joseki Configuration File" .

## --------------------------------------------------------------
## About this server

<#server>  rdf:type joseki:Server ;
    # Example of some initialization code.
    joseki:initialization
        [ module:implementation 
            [ module:className <java:org.joseki.util.ServiceInitSimple> ;
              rdfs:label "Example initializer" ; ]
        ] ;
    .

## --------------------------------------------------------------
## Services

## Services are best described by a blank node - it's the
## serviceRef that will be used to match requests to services,
## not some resource URI for the description.

## Note that the service reference and the routing of incoming
## requests by URI as defined by web.xml have to align.

# Service 1
# General purpose SPARQL processor, no dataset, expects the
# request to specify the dataset (either by parameters in the
# protocol request or in the query itself).

#<#service1>
#    rdf:type            joseki:Service ;
#    rdfs:label          "service point" ;
#    joseki:serviceRef   "sparql" ;  # web.xml must route this name to Joseki
#    joseki:processor    joseki:ProcessorSPARQL ;
#    .

# Service 2 - SPARQL processor only handling a given dataset
#<#service2>
#    rdf:type            joseki:Service ;
#    rdfs:label          "SPARQL on the books model" ;
#    joseki:serviceRef   "books" ;   # web.xml must route this name to Joseki
#    # dataset part
#    joseki:dataset      <#books> ;
#    # Service part.
#    # This processor will not allow either the protocol,
#    # nor the query, to specify the dataset.
#    joseki:processor    joseki:ProcessorSPARQL_FixedDS ;
#    .

# ---- SPARQL/Update
# A pair of services - one for SPARQL queries, one for SPARQL/Update
# Previous web.xml must also be updated to include a defintion for the
# servlet "SPARQL/Update service processor" and update requests must
# be routed to this servlet.


<#serviceUdpate>
    rdf:type            joseki:Service ;
    rdfs:label          "SPARQL/Update" ;
    joseki:serviceRef   "sparul" ;
    # dataset part
    joseki:dataset      <#ds>;
    # Service part.
    # This processor will not allow either the protocol,
    # nor the query, to specify the dataset.
    joseki:processor    joseki:ProcessorSPARQLUpdate
    .

<#serviceRead>
    rdf:type            joseki:Service ;
    rdfs:label          "SPARQL" ;
    joseki:serviceRef   "sparql" ;
    # dataset part
    joseki:dataset      <#ds> ;     ## Same dataset
    # Service part.
    # This processor will not allow either the protocol,
    # nor the query, to specify the dataset.
    joseki:processor    joseki:ProcessorSPARQL_FixedDS ;
    .

## --------------------------------------------------------------
## Datasets

#<#books>   rdf:type ja:RDFDataset ;
#    rdfs:label "Books" ;
#    ja:defaultGraph 
#      [ rdfs:label "books.n3" ;
#        a ja:MemoryModel ;
#        ja:content [ja:externalContent <file:Data/books.n3> ] ;
#      ] ;
#    .

<#db> rdf:type ja:RDBModel ;
    ja:connection
    [
        ja:dbType "MySQL" ;
        ja:dbURL          <jdbc:mysql://localhost/rdftestbak?autoReconnect=true> ;
        ja:dbUser         "root" ;
        ja:dbPassword     "badf00d" ;
        ja:dbClass        "com.mysql.jdbc.Driver" ;
    ] ;
    ja:reificationMode    ja:minimal ;      ## Minimal means fastpath is possible.
    ja:modelName "DEFAULT"
    . 

<#db2> rdf:type ja:RDBModel ;
    ja:connection
    [
        ja:dbType "MySQL" ;
        ja:dbURL          <jdbc:mysql://localhost/rdfapi?autoReconnect=true> ;
        ja:dbUser         "root" ;
        ja:dbPassword     "badf00d" ;
        ja:dbClass        "com.mysql.jdbc.Driver" ;
    ] ;
    ja:reificationMode    ja:minimal ;      ## Minimal means fastpath is possible.
    ja:modelName "DEFAULT" ;
		.

<#db3> rdf:type ja:MemoryModel .

<#db_test> rdf:type ja:MemoryModel ;
		rdfs:label "testing.n3" ;
		ja:content [ ja:externalContent <file:Data/testing.n3> ] ;
		.

<#ds>   rdf:type ja:RDFDataset ;
    rdfs:label "ds" ;
    ja:defaultGraph <#db> ;
		ja:namedGraph
			[	ja:graphName			<http://dwiel.net/axpress/cache> ;
				ja:graph					<#db2> ] ;
		ja:namedGraph
			[	ja:graphName			<http://dwiel.net/axpress/testing> ;
				ja:graph					<#db_test> ] ;
    .

<#mem>  rdf:type ja:RDFDataset ;
    rdfs:label "MEM" ;
    ja:defaultGraph [ a ja:MemoryModel ] ;
    . 

## --------------------------------------------------------------
## Processors

#joseki:ProcessorSPARQL
#    rdfs:label "General SPARQL processor" ;
#    rdf:type joseki:Processor ;
#    module:implementation joseki:ImplSPARQL ;

#    # Parameters - this processor processes FROM/FROM NAMED
#    joseki:allowExplicitDataset       "true"^^xsd:boolean ;
#    joseki:allowWebLoading            "true"^^xsd:boolean ;
#    ## And has no locking policy (it loads data each time).
#    ## The default is mutex (one request at a time)
#    joseki:lockingPolicy                joseki:lockingPolicyNone ;
#    .

joseki:ProcessorSPARQL_FixedDS
    rdfs:label "SPARQL processor for fixed datasets" ;
    rdf:type joseki:Processor ;
    module:implementation joseki:ImplSPARQL ;

    # This processor does not accept queries with FROM/FROM NAMED
    joseki:allowExplicitDataset       "true"^^xsd:boolean ;
    joseki:allowWebLoading            "false"^^xsd:boolean ;
    joseki:lockingPolicy              joseki:lockingPolicyMRSW ;
    .

joseki:ProcessorSPARQLUpdate
    rdfs:label "SPARQL Udpate processor" ;
    rdf:type joseki:Processor ;
    module:implementation joseki:ImplSPARQLUpdate ;
    joseki:lockingPolicy              joseki:lockingPolicyMRSW ;
    .

joseki:ImplSPARQL
    rdf:type   joseki:ServiceImpl ;
    module:className
        <java:org.joseki.processors.SPARQL> .

joseki:ImplSPARQLUpdate
    rdf:type   joseki:ServiceImpl ;
    module:className
        <java:org.joseki.processors.SPARQLUpdate> .

# Local Variables:        
# tab-width: 4
# indent-tabs-mode: nil
# End:
